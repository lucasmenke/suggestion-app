@page "/Details/{Id}"
@inject ISuggestionData suggestionDate
@inject NavigationManager navManager

<h1>Suggestion Details</h1>

<div>
    <div>
        @if (suggestion != null)
        {
            <div>
                <div>
                    <div>
                        <div>@GetUpvoteTopText()</div>
                        <span class="oi oi-caret-top"></span>
                        <div>@GetUpvoteBottomText()</div>
                    </div>
                    <div>
                        <div>@suggestion.DateCreated.ToString("dd.MM.yyyy")</div>
                    </div>
                </div>
                <div>
                    <div>@suggestion.Suggestion</div>
                    <div>@suggestion.Author.DisplayName</div>
                    <div>@suggestion.Description</div>
                    <div>@suggestion.Category.CategoryName</div>
                </div>
                <div>
                    <button @onclick="ClosePage"></button>
                </div>
            </div>
        }
    </div>
</div>

@if (suggestion?.SuggestionStatus != null)
{
    <div>
        <div>
            <div></div>
            <div>
                @suggestion.SuggestionStatus.StatusName
            </div>
            <div>
                @((MarkupString)suggestion.OwnerNotes)
            </div>
        </div>
    </div>
}

@code {
    // Parameter passed by the url {Id}
    [Parameter]
    public string Id { get; set; }

    private SuggestionModel suggestion;

    protected async override Task OnInitializedAsync()
    {
        suggestion = await suggestionDate.GetSuggestion(Id);
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

    private string GetUpvoteTopText()
    {
        if (suggestion.UserVotes?.Count > 0)
        {
            return suggestion.UserVotes.Count.ToString("00");
        }
        else
        {
            return "Click To";
        }
    }

    private string GetUpvoteBottomText()
    {
        if (suggestion.UserVotes?.Count > 1)
        {
            return "Upvotes";
        }
        else
        {
            return "Upvote";
        }
    }
}
